defaults: &defaults
  working_directory: /go/src/github.com/astronomerio/astro-cli

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run:
          name: "Astro version:"
          command: |
            echo $CIRCLE_TAG
  deploy:
    <<: *defaults
    docker:
       - image: circleci/golang:1.8
    steps:
      - checkout
      - run:
          name: "Installing PIP & AWS CLI"
          command: |
            if [ "${CIRCLE_TAG}" != "" ]; then
              sudo apt-get update
              sudo apt-get install -y python-pip
              sudo pip install awscli
            else
              echo "Not tagged, skipping deploy"
            fi
      - run:
          name: "Write metadata"
          command: |
            if [ "${CIRCLE_TAG}" != "" ]; then
              ./.circleci/scripts/write_metadata.sh $CIRCLE_TAG "`date '+%B %d, %Y @ %H:%M:%S'`"
            else
              echo "Not tagged, skipping step"
            fi
      - run:
          name: "Install Goreleaser"
          command: |
            if [ "${CIRCLE_TAG}" != "" ]; then
              curl -sL https://git.io/goreleaser | bash
            else
              echo "Not tagged, skipping step"
            fi
# Apparently gorelaser runs on install, since the repo already has a goreleaser.yml, it does the build after installing
#      - run:
#          name: "Run goreleaser"
#          command: |
#            if [ "${CIRCLE_TAG}" != "" ]; then
#              make release
#            else
#              echo "Not tagged, skipping step"
#            fi
#      - run:
#          name: "Push install.sh S3"
#          command: |
#            if [ "${CIRCLE_TAG}" != "" ]; then
#              ./.circleci/scripts/s3_upload_installer.sh $CIRCLE_TAG
#            else
#              echo "Not tagged, skipping step"
#            fi

workflows:
  version: 2
  distribute:
    jobs:
      - build:
          filters:
            branches:
              only: master
            tags:
              only: /^v\d[\d\.]+/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v\d[\d\.]+/