// Code generated by rice embed-go; DO NOT EDIT.
package daggenerate

import (
	"time"

	"github.com/GeertJohan/go.rice/embedded"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "google-analytics.txt",
		FileModTime: time.Unix(1606746235, 0),

		Content: string("from airflow.decorators import dag, task\nfrom airflow.utils.dates import days_ago\n\nfrom typing import Dict\nimport requests\nimport logging\n\ndefault_args = {\n    'start_date': days_ago(1),\n}\n\n@dag(schedule_interval='@hourly', default_args=default_args, catchup=False)\ndef taskflow():\n\n    @task\n    def zendesk_to_lake():\n        return 'data extracted from zendesk and written to lake'\n"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1606613344, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "google-analytics.txt"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`sources`, &embedded.EmbeddedBox{
		Name: `sources`,
		Time: time.Unix(1606613344, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"google-analytics.txt": file2,
		},
	})
}

func init() {

	// define files
	file4 := &embedded.EmbeddedFile{
		Filename:    "snowflake.txt",
		FileModTime: time.Unix(1606746241, 0),

		Content: string("\n    @task\n    def lake_to_snowflake():\n        return 'data loaded from lake to snowflake'\n\n    lake_to_snowflake(zendesk_to_lake())\n\ndag = taskflow()"),
	}

	// define dirs
	dir3 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1606613344, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file4, // "snowflake.txt"

		},
	}

	// link ChildDirs
	dir3.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`destinations`, &embedded.EmbeddedBox{
		Name: `destinations`,
		Time: time.Unix(1606613344, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir3,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"snowflake.txt": file4,
		},
	})
}
